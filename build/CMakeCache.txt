# This is the CMakeCache file.
# For build in directory: /home/tfrignac/git/openHEVC/build
# It was generated by CMake: /usr/bin/cmake
# You can edit this file to change values found and used by cmake.
# If you do not want to change any of the values, simply exit the editor.
# If you do want to change a value, simply edit, save, and exit the editor.
# The syntax for the file is as follows:
# KEY:TYPE=VALUE
# KEY is the name of a variable in the cache.
# TYPE is a hint to GUIs for the type of VALUE, DO NOT EDIT TYPE!.
# VALUE is the current value for the KEY.

########################
# EXTERNAL cache entries
########################

//enabled static library instead of shared
BUILD_SHARED_LIBS:BOOL=OFF

//Path to a program.
CMAKE_AR:FILEPATH=/usr/bin/ar

//Choose the type of build, options are: None(CMAKE_CXX_FLAGS or
// CMAKE_C_FLAGS used) Debug Release RelWithDebInfo MinSizeRel.
CMAKE_BUILD_TYPE:STRING=RELEASE

//Enable/Disable color output during build.
CMAKE_COLOR_MAKEFILE:BOOL=ON

//CXX compiler
CMAKE_CXX_COMPILER:FILEPATH=/usr/bin/c++

//Flags used by the compiler during all build types.
CMAKE_CXX_FLAGS:STRING=

//Flags used by the compiler during debug builds.
CMAKE_CXX_FLAGS_DEBUG:STRING=-g

//Flags used by the compiler during release builds for minimum
// size.
CMAKE_CXX_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG

//Flags used by the compiler during release builds.
CMAKE_CXX_FLAGS_RELEASE:STRING=-O3 -DNDEBUG

//Flags used by the compiler during release builds with debug info.
CMAKE_CXX_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG

//C compiler
CMAKE_C_COMPILER:FILEPATH=/usr/bin/cc

//Flags used by the compiler during all build types.
CMAKE_C_FLAGS:STRING=

//Flags used by the compiler during debug builds.
CMAKE_C_FLAGS_DEBUG:STRING=-g

//Flags used by the compiler during release builds for minimum
// size.
CMAKE_C_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG

//Flags used by the compiler during release builds.
CMAKE_C_FLAGS_RELEASE:STRING=-O3 -DNDEBUG

//Flags used by the compiler during release builds with debug info.
CMAKE_C_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG

//Flags used by the linker.
CMAKE_EXE_LINKER_FLAGS:STRING=

//Flags used by the linker during debug builds.
CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during release minsize builds.
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during release builds.
CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during Release with Debug Info builds.
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Enable/Disable output of compile commands during generation.
CMAKE_EXPORT_COMPILE_COMMANDS:BOOL=OFF

//Install path prefix, prepended onto install directories.
CMAKE_INSTALL_PREFIX:PATH=/usr/local

//Path to a program.
CMAKE_LINKER:FILEPATH=/usr/bin/ld

//Path to a program.
CMAKE_MAKE_PROGRAM:FILEPATH=/usr/bin/make

//Flags used by the linker during the creation of modules.
CMAKE_MODULE_LINKER_FLAGS:STRING=

//Flags used by the linker during debug builds.
CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during release minsize builds.
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during release builds.
CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during Release with Debug Info builds.
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Path to a program.
CMAKE_NM:FILEPATH=/usr/bin/nm

//Path to a program.
CMAKE_OBJCOPY:FILEPATH=/usr/bin/objcopy

//Path to a program.
CMAKE_OBJDUMP:FILEPATH=/usr/bin/objdump

//Value Computed by CMake
CMAKE_PROJECT_NAME:STATIC=openHEVC

//Path to a program.
CMAKE_RANLIB:FILEPATH=/usr/bin/ranlib

//Flags used by the linker during the creation of dll's.
CMAKE_SHARED_LINKER_FLAGS:STRING=

//Flags used by the linker during debug builds.
CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during release minsize builds.
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during release builds.
CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during Release with Debug Info builds.
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//If set, runtime paths are not added when installing shared libraries,
// but are added when building.
CMAKE_SKIP_INSTALL_RPATH:BOOL=NO

//If set, runtime paths are not added when using shared libraries.
CMAKE_SKIP_RPATH:BOOL=NO

//Flags used by the linker during the creation of static libraries.
CMAKE_STATIC_LINKER_FLAGS:STRING=

//Flags used by the linker during debug builds.
CMAKE_STATIC_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during release minsize builds.
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during release builds.
CMAKE_STATIC_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during Release with Debug Info builds.
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Path to a program.
CMAKE_STRIP:FILEPATH=/usr/bin/strip

//If this value is on, makefiles will be generated without the
// .SILENT directive, and all commands will be echoed to the console
// during the make.  This is useful for debugging only. With Visual
// Studio IDE projects all commands are done without /nologo.
CMAKE_VERBOSE_MAKEFILE:BOOL=FALSE

//Path to a file.
CRYPTOPP_INCLUDE_DIR:PATH=/usr/include/cryptopp

//Path to a library.
CRYPTOPP_LIBRARIES:FILEPATH=/usr/lib/libcryptopp.so

//Generate the test application
ENABLE_EXECUTABLE:BOOL=ON

//Dependencies for the target
LibOpenHevcWrapper_LIB_DEPENDS:STATIC=general;cryptopp;general;m;

//Path to a library.
SDL2MAIN_LIBRARY:FILEPATH=/usr/lib/x86_64-linux-gnu/libSDL2main.a

//Path to a file.
SDL2_INCLUDE_DIR:PATH=/usr/include/SDL2

//Where the SDL2 Library can be found
SDL2_LIBRARY:STRING=/usr/lib/x86_64-linux-gnu/libSDL2main.a;/usr/lib/x86_64-linux-gnu/libSDL2.so;-lpthread

//Path to a library.
SDLMAIN_LIBRARY:FILEPATH=SDLMAIN_LIBRARY-NOTFOUND

//Path to a file.
SDL_INCLUDE_DIR:PATH=SDL_INCLUDE_DIR-NOTFOUND

//Path to a library.
SDL_LIBRARY_TEMP:FILEPATH=SDL_LIBRARY_TEMP-NOTFOUND

//CPU architecture to optimize for. Using an incorrect setting
// here can result in crashes of the resulting binary because of
// invalid instructions used.
//\nSetting the value to "auto" will try to optimize for the architecture
// where cmake is called.
//\nOther supported values are: "none", "generic", "core", "merom"
// (65nm Core2), "penryn" (45nm Core2), "nehalem", "westmere",
// "sandy-bridge", "ivy-bridge", "haswell", "atom", "k8", "k8-sse3",
// "barcelona", "istanbul", "magny-cours", "bulldozer", "interlagos",
// "piledriver", "AMD 14h", "AMD 16h".
TARGET_ARCHITECTURE:STRING=auto

//Use AVX. This will double some of the vector sizes relative to
// SSE.
USE_AVX:BOOL=TRUE

//Use AVX2. This will double all of the vector sizes relative to
// SSE.
USE_AVX2:BOOL=FALSE

//Use FMA4.
USE_FMA4:BOOL=FALSE

//Use SSE2. If SSE2 instructions are not enabled the SSE implementation
// will be disabled.
USE_SSE2:BOOL=TRUE

//Use SSE3. If SSE3 instructions are not enabled they will be emulated.
USE_SSE3:BOOL=TRUE

//Use SSE4.1. If SSE4.1 instructions are not enabled they will
// be emulated.
USE_SSE4_1:BOOL=TRUE

//Use SSE4.2. If SSE4.2 instructions are not enabled they will
// be emulated.
USE_SSE4_2:BOOL=TRUE

//Use SSE4a. If SSE4a instructions are not enabled they will be
// emulated.
USE_SSE4a:BOOL=FALSE

//Use SSSE3. If SSSE3 instructions are not enabled they will be
// emulated.
USE_SSSE3:BOOL=TRUE

//Use XOP.
USE_XOP:BOOL=FALSE

//Use YASM. If YASM is not enabled the assembly implementation
// will be disabled.
USE_YASM:BOOL=ON

//Path to a program.
YASM_EXECUTABLE:FILEPATH=/usr/bin/yasm

//Path to a file.
YASM_INCLUDES:PATH=/usr/include

//Path to a library.
YASM_LIBRARIES:FILEPATH=YASM_LIBRARIES-NOTFOUND

_last_target_arch:STRING=auto

//Value Computed by CMake
openHEVC_BINARY_DIR:STATIC=/home/tfrignac/git/openHEVC/build

//Value Computed by CMake
openHEVC_SOURCE_DIR:STATIC=/home/tfrignac/git/openHEVC


########################
# INTERNAL cache entries
########################

//ADVANCED property for variable: CMAKE_AR
CMAKE_AR-ADVANCED:INTERNAL=1
//This is the directory where this CMakeCache.txt was created
CMAKE_CACHEFILE_DIR:INTERNAL=/home/tfrignac/git/openHEVC/build
//Major version of cmake used to create the current loaded cache
CMAKE_CACHE_MAJOR_VERSION:INTERNAL=3
//Minor version of cmake used to create the current loaded cache
CMAKE_CACHE_MINOR_VERSION:INTERNAL=5
//Patch version of cmake used to create the current loaded cache
CMAKE_CACHE_PATCH_VERSION:INTERNAL=1
//ADVANCED property for variable: CMAKE_COLOR_MAKEFILE
CMAKE_COLOR_MAKEFILE-ADVANCED:INTERNAL=1
//Path to CMake executable.
CMAKE_COMMAND:INTERNAL=/usr/bin/cmake
//Path to cpack program executable.
CMAKE_CPACK_COMMAND:INTERNAL=/usr/bin/cpack
//Path to ctest program executable.
CMAKE_CTEST_COMMAND:INTERNAL=/usr/bin/ctest
//ADVANCED property for variable: CMAKE_CXX_COMPILER
CMAKE_CXX_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS
CMAKE_CXX_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_DEBUG
CMAKE_CXX_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_MINSIZEREL
CMAKE_CXX_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELEASE
CMAKE_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELWITHDEBINFO
CMAKE_CXX_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_COMPILER
CMAKE_C_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS
CMAKE_C_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_DEBUG
CMAKE_C_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_MINSIZEREL
CMAKE_C_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELEASE
CMAKE_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELWITHDEBINFO
CMAKE_C_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//Executable file format
CMAKE_EXECUTABLE_FORMAT:INTERNAL=ELF
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS
CMAKE_EXE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_DEBUG
CMAKE_EXE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_MINSIZEREL
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELEASE
CMAKE_EXE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXPORT_COMPILE_COMMANDS
CMAKE_EXPORT_COMPILE_COMMANDS-ADVANCED:INTERNAL=1
//Name of external makefile project generator.
CMAKE_EXTRA_GENERATOR:INTERNAL=
//Name of generator.
CMAKE_GENERATOR:INTERNAL=Unix Makefiles
//Name of generator platform.
CMAKE_GENERATOR_PLATFORM:INTERNAL=
//Name of generator toolset.
CMAKE_GENERATOR_TOOLSET:INTERNAL=
//Have symbol pthread_create
CMAKE_HAVE_LIBC_CREATE:INTERNAL=
//Have library pthreads
CMAKE_HAVE_PTHREADS_CREATE:INTERNAL=
//Have library pthread
CMAKE_HAVE_PTHREAD_CREATE:INTERNAL=1
//Have include pthread.h
CMAKE_HAVE_PTHREAD_H:INTERNAL=1
//Source directory with the top level CMakeLists.txt file for this
// project
CMAKE_HOME_DIRECTORY:INTERNAL=/home/tfrignac/git/openHEVC
//Install .so files without execute permission.
CMAKE_INSTALL_SO_NO_EXE:INTERNAL=1
//ADVANCED property for variable: CMAKE_LINKER
CMAKE_LINKER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MAKE_PROGRAM
CMAKE_MAKE_PROGRAM-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS
CMAKE_MODULE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_DEBUG
CMAKE_MODULE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELEASE
CMAKE_MODULE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_NM
CMAKE_NM-ADVANCED:INTERNAL=1
//number of local generators
CMAKE_NUMBER_OF_MAKEFILES:INTERNAL=1
//ADVANCED property for variable: CMAKE_OBJCOPY
CMAKE_OBJCOPY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_OBJDUMP
CMAKE_OBJDUMP-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RANLIB
CMAKE_RANLIB-ADVANCED:INTERNAL=1
//Path to CMake installation.
CMAKE_ROOT:INTERNAL=/usr/share/cmake-3.5
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS
CMAKE_SHARED_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_DEBUG
CMAKE_SHARED_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELEASE
CMAKE_SHARED_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_INSTALL_RPATH
CMAKE_SKIP_INSTALL_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_RPATH
CMAKE_SKIP_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS
CMAKE_STATIC_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_DEBUG
CMAKE_STATIC_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELEASE
CMAKE_STATIC_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STRIP
CMAKE_STRIP-ADVANCED:INTERNAL=1
//uname command
CMAKE_UNAME:INTERNAL=/bin/uname
//ADVANCED property for variable: CMAKE_VERBOSE_MAKEFILE
CMAKE_VERBOSE_MAKEFILE-ADVANCED:INTERNAL=1
//Have include fcntl.h
FCNTL_H_FOUND:INTERNAL=1
//Details about finding SDL2
FIND_PACKAGE_MESSAGE_DETAILS_SDL2:INTERNAL=[/usr/lib/x86_64-linux-gnu/libSDL2main.a;/usr/lib/x86_64-linux-gnu/libSDL2.so;-lpthread][/usr/include/SDL2][v()]
//Details about finding Threads
FIND_PACKAGE_MESSAGE_DETAILS_Threads:INTERNAL=[TRUE][v()]
//Details about finding YASM
FIND_PACKAGE_MESSAGE_DETAILS_YASM:INTERNAL=[/usr/bin/yasm][v()]
//Have function GetProcessAffinityMask
GETPROCESSAFFINITYMASK_FOUND:INTERNAL=
//Have function gettimeofday
GETTIMEOFDAY_FOUND:INTERNAL=1
//Have function gmtime_r
GMTIME_R_FOUND:INTERNAL=1
//Result of TRY_COMPILE
HAVE_SIZEOF_VOID_P:INTERNAL=TRUE
//Have include immintrin.h
HAVE_immintrin_h:INTERNAL=1
//Have include pmmintrin.h
HAVE_pmmintrin_h:INTERNAL=1
//Have include smmintrin.h
HAVE_smmintrin_h:INTERNAL=1
//Have include tmmintrin.h
HAVE_tmmintrin_h:INTERNAL=1
//Have function localtime_r
LOCALTIME_R_FOUND:INTERNAL=1
//Have include pthread.h
PTHREADS_FOUND:INTERNAL=1
//Have function sched_getaffinity
SCHED_GETAFFINITY_FOUND:INTERNAL=1
SDL2_LIBRARY_TEMP:INTERNAL=/usr/lib/x86_64-linux-gnu/libSDL2main.a;/usr/lib/x86_64-linux-gnu/libSDL2main.a;/usr/lib/x86_64-linux-gnu/libSDL2main.a;/usr/lib/x86_64-linux-gnu/libSDL2main.a;/usr/lib/x86_64-linux-gnu/libSDL2.so;-lpthread;-lpthread;-lpthread;-lpthread
//CHECK_TYPE_SIZE: sizeof(void*)
SIZEOF_VOID_P:INTERNAL=8
//Have function strerror_r
STRERROR_R_FOUND:INTERNAL=1
//Have function sysconf
SYSCONF_FOUND:INTERNAL=1
//Have include unistd.h
UNISTD_H_FOUND:INTERNAL=1
//ADVANCED property for variable: USE_AVX
USE_AVX-ADVANCED:INTERNAL=1
//ADVANCED property for variable: USE_AVX2
USE_AVX2-ADVANCED:INTERNAL=1
//ADVANCED property for variable: USE_FMA4
USE_FMA4-ADVANCED:INTERNAL=1
//ADVANCED property for variable: USE_SSE2
USE_SSE2-ADVANCED:INTERNAL=1
//ADVANCED property for variable: USE_SSE3
USE_SSE3-ADVANCED:INTERNAL=1
//ADVANCED property for variable: USE_SSE4_1
USE_SSE4_1-ADVANCED:INTERNAL=1
//ADVANCED property for variable: USE_SSE4_2
USE_SSE4_2-ADVANCED:INTERNAL=1
//ADVANCED property for variable: USE_SSE4a
USE_SSE4a-ADVANCED:INTERNAL=1
//ADVANCED property for variable: USE_SSSE3
USE_SSSE3-ADVANCED:INTERNAL=1
//ADVANCED property for variable: USE_XOP
USE_XOP-ADVANCED:INTERNAL=1
//Have function usleep
USLEEP_FOUND:INTERNAL=1
//Have includes windows.h
WINDOWS_H_FOUND:INTERNAL=
//ADVANCED property for variable: YASM_INCLUDES
YASM_INCLUDES-ADVANCED:INTERNAL=1
//ADVANCED property for variable: YASM_LIBRARIES
YASM_LIBRARIES-ADVANCED:INTERNAL=1
//ADVANCED property for variable: _last_target_arch
_last_target_arch-ADVANCED:INTERNAL=1
//Test check_c_compiler_flag__Wl,_Bsymbolic
check_c_compiler_flag__Wl,_Bsymbolic:INTERNAL=1
//Test check_c_compiler_flag__fno_tree_vectorize
check_c_compiler_flag__fno_tree_vectorize:INTERNAL=1
//Test check_c_compiler_flag__fpic
check_c_compiler_flag__fpic:INTERNAL=1
//Test check_cxx_compiler_flag__Wl,_Bsymbolic
check_cxx_compiler_flag__Wl,_Bsymbolic:INTERNAL=1
//Test check_cxx_compiler_flag__march_sandybridge
check_cxx_compiler_flag__march_sandybridge:INTERNAL=1
//Test check_cxx_compiler_flag__mavx
check_cxx_compiler_flag__mavx:INTERNAL=1
//Test check_cxx_compiler_flag__mno_avx2
check_cxx_compiler_flag__mno_avx2:INTERNAL=1
//Test check_cxx_compiler_flag__mno_fma4
check_cxx_compiler_flag__mno_fma4:INTERNAL=1
//Test check_cxx_compiler_flag__mno_sse4a
check_cxx_compiler_flag__mno_sse4a:INTERNAL=1
//Test check_cxx_compiler_flag__mno_xop
check_cxx_compiler_flag__mno_xop:INTERNAL=1
//Test check_cxx_compiler_flag__msse2
check_cxx_compiler_flag__msse2:INTERNAL=1
//Test check_cxx_compiler_flag__msse2avx
check_cxx_compiler_flag__msse2avx:INTERNAL=1
//Test check_cxx_compiler_flag__msse3
check_cxx_compiler_flag__msse3:INTERNAL=1
//Test check_cxx_compiler_flag__msse4_1
check_cxx_compiler_flag__msse4_1:INTERNAL=1
//Test check_cxx_compiler_flag__msse4_2
check_cxx_compiler_flag__msse4_2:INTERNAL=1
//Test check_cxx_compiler_flag__mssse3
check_cxx_compiler_flag__mssse3:INTERNAL=1

